# LightRAG Deployment Configuration
# Version: 1.0.0
# Last Updated: 2025-07-22

metadata:
  name: light-rag
  version: "1.0.0"
  description: "Advanced RAG system with multi-modal search"
  maintainer: "truongtang"
  created: "2025-07-22"
  
# Application Configuration
app:
  name: light-rag
  port: 8000
  environment: production
  debug: false
  
  # Health Check Configuration
  health_check:
    path: /api/health
    interval: 30s
    timeout: 10s
    retries: 3
    start_period: 5s

# Environment Variables Configuration
environment:
  required:
    # API Keys
    - OPENROUTER_API_KEY
    - GOOGLE_API_KEY
    - FIREBASE_API_KEY
    
    # Database
    - DATABASE_URL
    
  optional:
    # Logging & Observability
    - LOGFIRE_TOKEN
    
    # Firebase (if using authentication)
    - FIREBASE_AUTH_DOMAIN
    - FIREBASE_PROJECT_ID
    - FIREBASE_STORAGE_BUCKET
    - FIREBASE_MESSAGING_SENDER_ID
    - FIREBASE_APP_ID
    - FIREBASE_MEASUREMENT_ID
    - FIREBASE_AUTH_URI
    - FIREBASE_TOKEN_URI
    
    # Application Settings
    - SECRET_KEY
    - ALLOWED_HOSTS
    - LOG_LEVEL
    - DEFAULT_MODEL
    - EMBEDDING_MODEL
    - MAX_FILE_SIZE
    - UPLOAD_PATH
    - ALLOWED_EXTENSIONS

# Database Configuration
database:
  type: postgresql
  required_extensions:
    - vector      # pgvector for embeddings
    - pgrouting   # for graph operations
    - pg_trgm     # for fuzzy search
    - uuid-ossp   # for UUID generation
  
  migrations:
    path: ./migrations
    auto_run: false
    files:
      - 001_create_tables.sql
      - 002_fix_entity_schema.sql
      - 006_add_fulltext_search.sql

# Docker Configuration
docker:
  dockerfile: Dockerfile
  build_context: .
  target_port: 8000
  
  # Multi-stage build optimization
  stages:
    - builder
    - production
  
  # Resource limits
  resources:
    memory: 512Mi
    cpu: 0.5

# Railway Specific Configuration
railway:
  runtime: V2
  region: us-west1
  auto_deploy: true
  
  services:
    app:
      name: light-rag
      dockerfile: Dockerfile
      port: 8000
      replicas: 1
      auto_sleep: false
      
    database:
      name: postgres
      type: postgresql
      version: "15"
      
  # Reference variables for service connections
  variable_references:
    DATABASE_URL: "${{Postgres.DATABASE_URL}}"

# Deployment Environments
environments:
  development:
    debug: true
    log_level: DEBUG
    replicas: 1
    auto_sleep: true
    
  staging:
    debug: false
    log_level: INFO
    replicas: 1
    auto_sleep: false
    
  production:
    debug: false
    log_level: INFO
    replicas: 1
    auto_sleep: false
    scaling:
      min_replicas: 1
      max_replicas: 3
      cpu_threshold: 70

# Version History
versions:
  "1.0.0":
    date: "2025-07-22"
    changes:
      - "Initial deployment configuration"
      - "Complete RAG system with Docker support"
      - "Firebase authentication integration"
      - "PostgreSQL with vector extensions"
      - "Multi-modal search with reranking"
    features:
      - "Document processing pipeline"
      - "Entity and relationship extraction"
      - "Semantic search with embeddings"
      - "Graph-based analytics"
      - "Real-time query processing"
    
# Deployment Scripts
scripts:
  setup: |
    echo "Setting up LightRAG deployment..."
    chmod +x deployment/*.sh
    
  pre_deploy: |
    echo "Running pre-deployment checks..."
    python -m pytest tests/ --quick
    
  post_deploy: |
    echo "Running post-deployment tasks..."
    python deployment/railway-migrations.py
    curl -f $RAILWAY_STATIC_URL/api/health
    
  rollback: |
    echo "Rolling back deployment..."
    railway redeploy --previous

# Monitoring and Alerting
monitoring:
  enabled: true
  
  health_checks:
    - name: api_health
      url: /api/health
      expected_status: 200
      interval: 60s
      
    - name: database_health
      url: /api/status
      expected_response: '"database_configured":true'
      interval: 300s
      
  alerts:
    - name: high_error_rate
      condition: error_rate > 5%
      duration: 5m
      
    - name: slow_response_time
      condition: response_time > 2s
      duration: 2m

# Security Configuration
security:
  https_only: true
  cors_enabled: true
  rate_limiting:
    enabled: true
    requests_per_minute: 100
    
  environment_validation:
    - no_debug_in_production
    - secure_secret_key
    - valid_database_url

# Backup and Recovery
backup:
  database:
    enabled: true
    schedule: "0 2 * * *"  # Daily at 2 AM
    retention_days: 30
    
  files:
    enabled: false  # No persistent file storage in Railway
    
# Performance Configuration
performance:
  caching:
    enabled: true
    ttl: 3600  # 1 hour
    
  connection_pooling:
    min_connections: 2
    max_connections: 10
    
  timeouts:
    request_timeout: 30s
    database_timeout: 10s